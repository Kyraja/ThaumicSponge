buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = 'oss-sonatype-public'
            url = 'https://oss.sonatype.org/content/repositories/public/'
        }
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven/'
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.12.0'
        classpath 'org.spongepowered:mixingradle:0.2-SNAPSHOT'
        classpath 'org.spongepowered:spongegradle:0.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.spongepowered.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

defaultTasks 'clean', 'licenseFormat', 'sortAccessTransformers', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = project.name.toLowerCase()
version = "${project.minecraftVersion}-${project.forgeVersion}-r${project.apiVersion.split("-")[0]}"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name 'Sonatype'
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name 'Forge repo'
        url 'http://files.minecraftforge.com/maven'
    }
    maven {
        name 'Sponge maven repo'
        url 'http://repo.spongepowered.org/maven'
    }
    ivy {
        name 'Thaumcraft Dropbox'
        url 'https://dl.dropboxusercontent.com/u/'
        layout "pattern", {
            artifact "[organization]/[artifact]-[revision]-[classifier].[ext]"
        }

    }
}

sourceSets {
    main {
        refMap = "mixins.${project.name.toLowerCase()}.refmap.json"
    }
}

minecraft {
    forgeVersion = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpMappings
    makeObfSourceJar = false
}


dependencies {
    compile project('ThaumicSpongeAPI')
    compile('org.spongepowered:mixin:0.4.16-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
    }
    compile "org.spongepowered:spongeforge:1.8.9-1732-3.1.0-BETA-1138:dev"
    compile "47135879:Thaumcraft:1.8.9-5.1.6:deobf"
}

sourceSets {
    main { output.resourcesDir = output.classesDir }
}


license {
    ext.name = project.name
    ext.url = project.url
    header rootProject.file('HEADER.txt')
    ignoreFailures true
    strictCheck true
    include '**/*.java'
}

// ForgeGradle 2 fails to apply transformer rules for classes it doesn't know of by default
// We use the access transformer to make the catalogs in the API accessible
deobfMcMCP { failOnAtError = false }
deobfMcSRG { failOnAtError = false }

if (JavaVersion.current().isJava8Compatible() || JavaVersion.current().isJava9Compatible()) {
    tasks.withType(Javadoc) {
        // disable the crazy super-strict doclint tool in Java 8
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

compileJava {
    options.compilerArgs += [
            '-Xlint:-processing',
    ]
    options.deprecation = true
    options.encoding = 'utf8'
}

jar {
    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': url,
                'FMLAT': 'thaumicsponge_at.cfg'
        )
    }
}

shadowJar {
    duplicatesStrategy= 'EXCLUDE'
    dependencies {
        include project('ThaumicSpongeAPI')
    }
}
